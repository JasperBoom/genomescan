---
title: "Variant thresholds"
date: "`r Sys.Date()`"
author: "J. Boom"
format:
    html:
        toc: true
        self-contained: true
        toc-title: Table of contents - Variant thresholds
        toc-location: left
execute:
    echo: true
---

# Load packages
```{r}
#| warning: false

library("tidyverse")
library("knitr")
library("readxl")
library("broom")
library("naniar")
library("factoextra")
library("FactoMineR")
library("PCAtools")
library("ggfortify")
library("dlstats")
library("PRROC")
library("precrec")
library("plotROC")
```

# Run document setup
```{r}
#| warning: false

knitr::opts_chunk$set(echo=TRUE, message=FALSE)
knitr::opts_chunk$set(fig.width=9,
                      fig.height=9,
                      out.width="85%",
                      fig.align="center")
theme_set(theme_bw())
```

# Threshold test data
## Load data
```{r}
#| label: tbl-data
#| tbl-cap: _The first 8 rows of the data file._
#| warning: false

# Install tidyverse:
# https://medium.com/@jamie84mclaughlin/installing-r-and-the-tidyverse-on-ubuntu-20-04-60170020649b

# Read in the tsv file in the data folder.
data <- read_tsv("/home/j.boom/develop/genomescan/data/benchmark-vcf/2024-01-26/benchmark.annotated.tab",
                 col_names=TRUE,
                 skip=67,
                 show_col_types = FALSE)

# Display the first 8 lines of the data file.
head(data, n=8) |>
    knitr::kable(format="html") |>
    kableExtra::kable_classic(full_width=FALSE)
```

## Inspect & select data
```{r}
#| label: tbl-data
#| tbl-cap: _The first 8 rows of the most important numeric annotations._
#| warning: false

# Condense rows to one per variation id.
data_dedup <- data[!duplicated(data$`Uploaded_variation`), ] |>
    dplyr::rename("Variation_id" = 1)
# Select just the important numeric annotation sources.
# SIFT and PolyPhen were removed because they had not a single value.
annotation_columns <- c("Variation_id", "AF", "MAX_AF", "am_pathogenicity",
                        "CADD_PHRED", "CADD_RAW", "CAPICE_SCORE",
                        "FATHMM_MKL_C", "FATHMM_MKL_NC", "ClinVar_CLNSIG")
# Select just the annotation columns, replace dash with NA and make sure the
# values are numeric.
data_select <- data_dedup[,annotation_columns] |>
    replace_with_na_all(condition = ~.x == "-") |>
    mutate_at(annotation_columns[-1], function(x) as.numeric(as.character(x)))

# Remove more annotation sources due to high amount of missing values, also
# remove rows of remaining columns with missing values.
data_nomissing <- data_select |>
    dplyr::select("Variation_id", "CADD_PHRED", "CADD_RAW", "CAPICE_SCORE",
                  "FATHMM_MKL_C", "FATHMM_MKL_NC") |>
    drop_na()

# Include the pathogenic/benign identifier as a column.
temp <- data_dedup[,c("Variation_id", "ClinVar_CLNSIG")]
data_nomissing_groups <- left_join(data_nomissing,
                                   temp,
                                   by="Variation_id") |>
    dplyr::mutate_at(c("ClinVar_CLNSIG"), as.factor) |>
    tibble::column_to_rownames(var="Variation_id")


data_nomissing <- data_nomissing |>
    tibble::column_to_rownames(var="Variation_id")

# Display the first 8 lines of the data.
head(data_nomissing_groups, n=8) |>
    knitr::kable(format="html") |>
    kableExtra::kable_classic(full_width=FALSE)
```

## Run PCA
```{r}
#| warning: false

# http://www.sthda.com/english/wiki/factoextra-r-package-easy-multivariate-data-analyses-and-elegant-visualization
# Perform a principal component analysis, include centering and scaling of data.
pca.data <- PCA(data_nomissing,
                graph=FALSE,
                ncp=4,
                scale.unit=TRUE)

# Extract the results for variables.
pca.var <- get_pca_var(pca.data)

# Contributions of variables to PC1.
contributions_pc1 <- fviz_contrib(pca.data, choice = "var", axes = 1, top = 10)
# Contributions of variables to PC2.
contributions_pc2 <- fviz_contrib(pca.data, choice = "var", axes = 2, top = 10)
```

## Run prcomp
```{r}
#| warning: false

# Perform a principal component analysis, include centering and scaling of data.
pcadata <- prcomp(data_nomissing,
                  center=TRUE,
                  scale.=TRUE)
```

## Create a scatterplot
```{r}
#| warning: false

# Prepare data from PCA for ggplot scatterplot and create ggplot scatterplot.
pcascatterplotdata <- cbind(pcadata$x[,1:2],
                            as.character(data_nomissing_groups[,6])) |>
    as_tibble() |>
    dplyr::rename(PC1="PC1",
                  PC2="PC2",
                  CONDITION="V3") |>
    dplyr::mutate_at(c("PC1"),
                     as.numeric) |>
    dplyr::mutate_at(c("PC2"),
                     as.numeric)

# Create the scatterplot.
pcascatterplot <- ggplot(data=pcascatterplotdata,
                         aes(x=PC1,
                             y=PC2,
                             colour=CONDITION)) +
    geom_point(size=2) +
    xlim(-4.0, 3.0) +
    ylim(-1.0, 2.0) +
    stat_smooth(method=lm,
                se=TRUE,
                colour="#ec9e62") +
    theme(legend.position=c(0.95,0.75),
          legend.justification=c(1,0)) +
    scale_colour_manual(values=c("#83b96d",
                                 "#00a6cf"),
                        name="Clinical significance") +
    ggtitle("Projection of data on principal components one and two")
pcascatterplot
```

## Create a barplot
```{r}
#| warning: false

# Prepare data from PCA for ggplot barplot and create ggplot barplot
pcabarplotdata <- cbind(contributions_pc1$data[,c(1,2)],
                        contributions_pc2$data[,2]) |>
    as_tibble() |>
    dplyr::rename(PC1="contrib",
                  PC2="contributions_pc2$data[, 2]",
                  METHOD="name") |>
    dplyr::mutate_at(c("PC1"), as.numeric) |>
    dplyr::mutate_at(c("PC2"), as.numeric) |>
    pivot_longer(names_to="PCA",
                 values_to="CONTRIBUTION",
                 cols=c("PC1", "PC2")) |>
    dplyr::mutate(across(c("CONTRIBUTION"),
                         round,
                         2))

# Create the barplot.
pcabarplot <- ggplot(data=pcabarplotdata,
                     aes(x=METHOD,
                         y=CONTRIBUTION,
                         fill=PCA,
                         colour=PCA)) +
    ylim(c(0,70)) +
    geom_bar(stat="identity",
             position=position_dodge()) +
    geom_text(aes(label=CONTRIBUTION),
              fontface="bold",
              vjust=-1,
              position=position_dodge(0.9),
              size=4,
              colour="black") +
    theme(legend.position=c(0.95,0.75),
          legend.justification=c(1,0)) +
    scale_colour_manual(values=c("#003670",
                                 "#ec9e62"),
                        name="Principal component") +
    scale_fill_manual(values=c("#003670",
                               "#ec9e62"),
                      name="Principal component") +
    ggtitle("Contribution of the different annotation sources to principal\
            components one and two") +
    xlab("Annotation source") +
    ylab("Contribution (%)")
pcabarplot
```

## Create a ROC plot
```{r}
#| warning: false

# https://cran.r-project.org/web/packages/plotROC/vignettes/examples.html
rocplot_multiple <- ggplot(melt_roc(data_nomissing_groups,
                                    "ClinVar_CLNSIG",
                                    c("CADD_PHRED",
                                      "CADD_RAW",
                                      "CAPICE_SCORE",
                                      "FATHMM_MKL_C",
                                      "FATHMM_MKL_NC")),
                           aes(m=M,
                               d=D,
                               colour=name)) +
    geom_roc(n.cuts=5,
             labelsize=5,
             labelround=2,
             show.legend=TRUE,
             labels=FALSE) +
    xlim(-0.1, 1) +
    ylim(0, 1.1)
rocplot_multiple +
    facet_wrap(~ name)

calc_auc(rocplot_multiple) |>
    knitr::kable(format="html") |>
    kableExtra::kable_classic(full_width=FALSE)
```

# Output session information
```{r}
#| warning: false

sessionInfo()
```